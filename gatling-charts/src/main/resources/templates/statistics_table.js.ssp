//<% import com.excilys.ebi.gatling.charts.config.ChartsFiles.GLOBAL_PAGE_NAME %>

function generateHtmlRow(request, level, index, parent, group) {
	if (request.name == '<%= GLOBAL_PAGE_NAME %>')
		var url = 'index.html';
	else
		var url ='req_' + request.pathFormatted + '.html';

	if (group)
		var expandButton = '<a id="' + request.pathFormatted + '" href="#" style="margin-left: ' + (level * 10) + 'px;" class="expand-button"></a>';
	else
		var expandButton = '<a id="' + request.pathFormatted + '" href="#" style="margin-left: ' + (level * 10) + 'px;" class="expand-button hidden"></a>';

	if (parent)
		var style = ' class="child-of-' + parent + '"';
	else
		var style = '';

	return '<tr' + style + '> \
		<td class="total col-1">' + expandButton + '<a href="' + url +'">' + request.name + '</a><span style="display:none;">;' + index + '</span></td> \
		<td></td> \
		<td class="value total col-2">' + request.stats.numberOfRequests.total + '</td> \
		<td class="value ok col-3">' + request.stats.numberOfRequests.ok + '</td> \
		<td class="value ko col-4">' + request.stats.numberOfRequests.ko + '</td> \
		<td></td> \
		<td class="value total col-5">' + request.stats.minResponseTime.total + '</td> \
		<td class="value total col-6">' + request.stats.maxResponseTime.total + '</td> \
		<td class="value total col-7">' + request.stats.meanResponseTime.total + '</td> \
		<td class="value total col-8">' + request.stats.standardDeviation.total + '</td> \
		<td class="value total col-9">' + request.stats.percentiles1.total + '</td> \
		<td class="value total col-10">' + request.stats.percentiles2.total + '</td> \
		<td class="value total col-11">' + request.stats.meanNumberOfRequestsPerSecond.total + '</td> \
		</tr>';
}

function generateHtmlRowsForGroup(group, level, index, parent) {
	var buffer = '';

	if (level > 0) {
		buffer += generateHtmlRow(group, level - 1, index, parent, true);
		index++;
	}

	if (!parent)
		parent = 'ROOT';
	else
		parent = group.pathFormatted;


	if (group.groups != null) {
		$.each(group.groups, function(childGroupName, childGroup) {
			var result = generateHtmlRowsForGroup(childGroup, level + 1, index, parent);
			buffer += result.html;
			index = result.index;
		});
	}

	if (group.requests != null) {
		$.each(group.requests, function(requestName, request) {
			buffer += generateHtmlRow(request, level, index, parent);
			index++;
		});
	}

	return { html: buffer, index: index };
}

$('#container_statistics thead').append(generateHtmlRow(stats, 0, 0));

var lines = generateHtmlRowsForGroup(stats, 0, 0)
$('#container_statistics tbody').append(lines.html);

$('#container_statistics').expandable();
//$('#container_statistics').sortable();

/*$.tablesorter.addParser({
	id: 'requests',
	is: function(text) { return false },
	format: function(text) { return parseInt(text.replace(/.*;/, '')) },
	type: 'numeric'
});

$('#container_statistics').tablesorter({
	cssAsc: "sorted-down",
	cssDesc: "sorted-up",
	headers: {
		0: {sorter: 'requests'},
		1: {sorter: false},
		2: {sorter: false},
		3: {sorter: false},
		4: {sorter: false}
	},
	sortList: [[0, 0]]
});*/

if (lines.index < 30) {
	$('#statistics_title span').attr('style', 'display: none;');
	$('#statistics_title').attr('style', 'cursor: auto;')
}
else {
	$("#statistics_title").click(function(){
		$(this).toggleClass("title_collapsed").toggleClass("title_not_collapsed");
		$(".statistics").toggleClass("collapsed").toggleClass("not_collapsed");
	});
}